launch:

  # state customisations
- arg: { name: "state_source",      default: "apm" }        # apm, tf-mocap, mocap
- arg: { name: "autopilot",         default: "arducopter" } # arducopter, betaflight 
- arg: { name: "tf_myframe",        default: "uas1"  }
- arg: { name: "tf_baseframe",      default: "map"  }
  # controller customisations
- arg: { name: "total_mass",        default: "1.0" }      # kg, total mass flying
- arg: { name: "thrust_scaler",     default: "25.0" }     # scales from Newtons to [0..1]
- arg: { name: "bias_compensation", default: "off" }      # on, off, auto
- arg: { name: "flatness_ff",       default: "false" }    # use accel feed-fwd
- arg: { name: "controller_type",   default: "pos-vel"  } # pos-vel, vel-only, NEvel-Dpos
  # operational customisations
- arg: { name: "use_namespace",     default: "u1" }
- arg: { name: "using_mavros",      default: "true"  }
- arg: { name: "comm_port",         default: "/dev/ttyUSB0:57600"  }
- arg: { name: "use_arbitrator",    default: "true" }
  # extras
- arg: { name: "use_waypoint_handler", default: "false" }
- arg: { name: "use_examples",         default: "false" }

- node:
    namespace:  "$(var use_namespace)"
    pkg:        "state_manager"
    exec:       "state_manager_node"
    param:
    - { name:   "state_source",       value:  "$(var state_source)" }
    - { name:   "tf_rate",            value:  190 }
    - { name:   "my_frame",           value:  "$(var tf_myframe)" }
    - { name:   "base_frame",         value:  "$(var tf_baseframe)" }
    - { name:   "filter_type",        value:  "median" }

- node:
    namespace:  "$(var use_namespace)"
    pkg:        "lqg_control"
    exec:       "lqg_flight_node"
    param:
    - { name:   "bias_estimator",     value:  "$(var bias_compensation)" }
    - { name:   "total_mass",         value:  "$(var total_mass)" }   #0.85
    - { name:   "controller_rate",    value:  50 }
    - { name:   "estimator_rate",     value:  20 }
    - { name:   "enable_flatness_ff", value:  "$(var flatness_ff)" }

- node:
    if:         "$(var use_arbitrator)"
    namespace:  "$(var use_namespace)"
    pkg:        "flight_mode_arbitrator"
    exec:       "flight_mode_arbitrator_node"
    param:
    - { name:   "init_hover_pd",      value:  -1.75 }

- node:
    if:         "$(var use_waypoint_handler)"
    namespace:  "$(var use_namespace)"
    pkg:        "waypoint_manager"
    exec:       "waypoint_manager_node"
    param:
    - { name:   "init_NED",           value:  "[0.0, 0.0, -0.75]" }

- node:
    namespace:  "$(var use_namespace)"
    if:         "$(eval ' \"$(var autopilot)\" == \"betaflight\" ')"
    pkg:        "sbus_interface"
    exec:       "betaflight_sbus_node"
    param:
    - { name:   "sbus_port", value:  "$(var comm_port)" }

- group:
    - node:
        namespace:  "$(var use_namespace)/mavros"
        if:         "$(var using_mavros)"
        pkg:        "mavros"
        exec:       "mavros_node"
        param:
        - from:     "$(find-pkg-share freyja_configfiles)/launch/mavros_config_freyja.yaml"
        - { name:   "fcu_url",            value: "$(var comm_port)" }
    
    - node:
        namespace:  "$(var use_namespace)"
        if:         "$(var using_mavros)"
        pkg:        "apm_handler"
        exec:       "apm_handler_node"
        param:
        - { name:   "thrust_scaler",    value:  25.0 }