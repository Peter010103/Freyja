%implements s14_b0_zd7eq_Derivatives "C"

%function Derivatives(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl
NeslSimulationData *simulationData;
real_T time;
boolean_T tmp;
real_T tmp_p[24];
int_T tmp_e[7];
NeslSimulator *simulator;
NeuDiagnosticManager *diagnosticManager;
NeuDiagnosticTree *diagnosticTree;
int32_T tmp_i;
char *msg;
XDot *_rtXdot;
%closefile localVarDecl
_rtXdot = %<(SLibCG_SE(SLibGetContStatesDerivativeStructPtr()))>;
simulationData = (NeslSimulationData *)rtDW.fu1bp1db1b;
time = %<(SLibCG_SE(LibGetT()))>;
simulationData->mData->mTime.mN = 1;
simulationData->mData->mTime.mX = &time;
simulationData->mData->mContStates.mN = 13;
simulationData->mData->mContStates.mX = (real_T *)&rtX.ln2aukr035;
simulationData->mData->mDiscStates.mN = 0;
simulationData->mData->mDiscStates.mX = NULL;
simulationData->mData->mModeVector.mN = 0;
simulationData->mData->mModeVector.mX = NULL;
tmp = %<(SLibCG_SE(SLibCGIRGetSolverFoundZcEvents()))>;
simulationData->mData->mFoundZcEvents = tmp;
simulationData->mData->mIsMajorTimeStep = %<(SLibCG_SE(LibIsMajorTimeStep()))>;
tmp = %<(SLibCG_SE(SLibCGIRGetSolverAssertCheck()))>;
simulationData->mData->mIsSolverAssertCheck = tmp;
tmp = %<(SLibCG_SE(RTMSolverIs("CheckingCIC")))>;
simulationData->mData->mIsSolverCheckingCIC = tmp;
tmp = %<(SLibCG_SE(RTMSolverIs("ComputingJacobian")))>;
simulationData->mData->mIsComputingJacobian = tmp;
tmp = %<(SLibCG_SE(RTMSolverIs("RequestingReset")))>;
simulationData->mData->mIsSolverRequestingReset = tmp;
tmp_e[0] = 0;
tmp_p[0] = rtB.krkfrgr5lp[0];
tmp_p[1] = rtB.krkfrgr5lp[1];
tmp_p[2] = rtB.krkfrgr5lp[2];
tmp_p[3] = rtB.krkfrgr5lp[3];
tmp_e[1] = 4;
tmp_p[4] = rtB.bdf2x2uoq0[0];
tmp_p[5] = rtB.bdf2x2uoq0[1];
tmp_p[6] = rtB.bdf2x2uoq0[2];
tmp_p[7] = rtB.bdf2x2uoq0[3];
tmp_e[2] = 8;
tmp_p[8] = rtB.ou1uxbnbsu[0];
tmp_p[9] = rtB.ou1uxbnbsu[1];
tmp_p[10] = rtB.ou1uxbnbsu[2];
tmp_p[11] = rtB.ou1uxbnbsu[3];
tmp_e[3] = 12;
tmp_p[12] = rtB.in4w3jl5ci[0];
tmp_p[13] = rtB.in4w3jl5ci[1];
tmp_p[14] = rtB.in4w3jl5ci[2];
tmp_p[15] = rtB.in4w3jl5ci[3];
tmp_e[4] = 16;
tmp_p[16] = rtB.bdwqzbwe2u[0];
tmp_p[17] = rtB.bdwqzbwe2u[1];
tmp_p[18] = rtB.bdwqzbwe2u[2];
tmp_p[19] = rtB.bdwqzbwe2u[3];
tmp_e[5] = 20;
tmp_p[20] = rtB.mj4obgjuu5[0];
tmp_p[21] = rtB.mj4obgjuu5[1];
tmp_p[22] = rtB.mj4obgjuu5[2];
tmp_p[23] = rtB.mj4obgjuu5[3];
tmp_e[6] = 24;
simulationData->mData->mInputValues.mN = 24;
simulationData->mData->mInputValues.mX = &tmp_p[0];
simulationData->mData->mInputOffsets.mN = 7;
simulationData->mData->mInputOffsets.mX = &tmp_e[0];
simulationData->mData->mDx.mN = 13;
simulationData->mData->mDx.mX = (real_T *)&_rtXdot->ln2aukr035;
simulator = (NeslSimulator *)rtDW.j3vbl1yk5q;
diagnosticManager = (NeuDiagnosticManager *)rtDW.iweq3fmzfv;
diagnosticTree = neu_diagnostic_manager_get_initial_tree(diagnosticManager);
tmp_i = ne_simulator_method(simulator, NESL_SIM_DERIVATIVES, simulationData, diagnosticManager);
if (tmp_i != 0) {
    tmp = error_buffer_is_empty(%<(LibGetRTModelErrorStatus())>);
    if (tmp) {
        msg = rtw_diagnostics_msg(diagnosticTree);
        %<(LibSetRTModelErrorStatus("msg"))>;
    }
}
_rtXdot->eclxswx3o1 = rtB.akpo5rg1mo;
_rtXdot->nrtkru04fn = rtB.ndkq2bxqkx;
_rtXdot->gxunomsa10 = rtB.li5a0140mm;
_rtXdot->b2q1wtfuy0 = rtB.gv0bdd5hgo;
_rtXdot->mac20sf5xm = rtB.n5hqclvb1a;
_rtXdot->c1lnotgjhi = rtB.ii5jyp0l5w;
%closefile cfgTxt
%<cfgTxt>
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Derivatives(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 4, fcnProtoType)>
%<LibSetSystemField(system, "CachedDerivativeLocalVars", localVarDecl)>
%endfunction
